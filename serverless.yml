org: terralanes
app: terralanes-backend
service: terralanes-api

provider:
  name: aws
  runtime: nodejs12.x
  versionFunctions: false
  vpc:
    securityGroupIds:
      - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}
    subnetIds:
      - subnet-03086cdd9e1e48134 # public-1
      - subnet-0243c1302f458775f # public-2
      - subnet-016928dcc4b9cba7b # public-3
  profile: default
  region: us-east-1
  stage: dev
  environment:
    DB_URL: ${param:DB_URL, env:DB_URL}
    DB_HOST: ${param:DB_HOST, env:DB_HOST}
    DB_DATABASE: ${param:DB_DATABASE, env:DB_DATABASE}
    DB_PASSWORD: ${param:DB_PASSWORD, env:DB_PASSWORD}
    DB_USERNAME: ${param:DB_USERNAME, env:DB_USERNAME}
    SEARCH_URL: ${param:SEARCH_URL, env:SEARCH_URL}
    REACT_APP_MAPBOX_KEY: ${param:REACT_APP_MAPBOX_KEY, env:REACT_APP_MAPBOX_KEY}
    NODE_ENV: ${param:NODE_ENV, env:NODE_ENV}
    ORIGIN_URL: ${param:ORIGIN_URL, env:ORIGIN_URL}
    SES_ACCESS_KEY_ID: ${param:SES_ACCESS_KEY_ID, env:SES_ACCESS_KEY_ID}
    SES_SECRET_ACCESS_KEY: ${param:SES_SECRET_ACCESS_KEY, env:SES_SECRET_ACCESS_KEY}
    STRIPE_WEBHOOK_SECRET: ${param:STRIPE_WEBHOOK_SECRET, env:STRIPE_WEBHOOK_SECRET}

plugins:
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-dependson-plugin
  - serverless-prune-plugin

custom:
  dependsOn:
    enabled: true
    chains: 20
  prune:
    automatic: true
    number: 3
  warmup:
    allLambdas:
      enabled: ${param:WARMUP_ENABLED, false}
      prewarm: true
      concurrency: 1
      vpc:
        securityGroupIds:
          - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}
        subnetIds:
          - subnet-0969f48a6ba21d4da # private-1
          - subnet-0c4379e623f530211 # private-2
          - subnet-0b713d464c35059f9 # private-3

package:
  individually: false
  exclude:
    - data/**
    - tests/**
    - seeders/**
    - migrations/**

functions:
# Search
  search:
    handler:
      ./handlers/search.search
    events:
        - http:
            path: api/search
            method: get
            cors: true
  searchLedger:
    handler:
      ./handlers/search.searchLedger
    events:
        - http:
            path: api/ledger/search
            method: get
            cors: true
  searchUsersInBrokerage:
    handler:
      ./handlers/search.searchUsersInBrokerage
    events:
        - http:
            path: api/search/users
            method: get
            cors: true
  searchContacts:
    handler:
      ./handlers/search.searchContacts
    events:
        - http:
            path: api/search/contacts
            method: get
            cors: true

# Ledger
  getLedger:
    handler:
      ./handlers/ledger.getLedger
    events:
        - http:
            path: api/ledger/{id}
            method: get
            cors: true
  writeMessage:
    handler:
      ./handlers/ledger.writeMessage
    events:
        - http:
            path: api/ledger
            method: post
            cors: true
  updateMessage:
    handler:
      ./handlers/ledger.updateMessage
    events:
        - http:
            path: api/ledger/message/{id}
            method: put
            cors: true
        - http:
            path: api/ledger/message/{id}
            method: delete
            cors: true

# User
  getUser:
    handler:
      ./handlers/user.getUser
    events:
        - http:
            path: api/user
            method: get
            cors: true
  getEmailById:
    handler:
      ./handlers/user.getEmailById
    events:
        - http:
            path: api/user/email/{userId}
            method: get
            cors: true
  deleteUser:
    handler:
      ./handlers/user.deleteUser
    events:
        - http:
            path: api/user/{userId}
            method: delete
            cors: true
  updateUser:
    handler:
      ./handlers/user.updateUser
    events:
        - http:
            path: api/user/{userId}
            method: put
            cors: true
  getUserById:
    handler:
      ./handlers/user.getUserById
    events:
        - http:
            path: api/user/{userId}
            method: get
            cors: true
  getTeams:
    handler:
      ./handlers/user.getTeams
    events:
        - http:
            path: api/user/teams
            method: get
            cors: true
  createProfile:
    handler:
      ./handlers/user.createProfile
    events:
        - http:
            path: api/user
            method: post
            cors: true
  updateProfile:
    handler:
      ./handlers/user.updateProfile
    events:
        - http:
            path: api/user
            method: put
            cors: true
  getTopCustomersForUser:
    handler:
      ./handlers/user.getTopCustomersForUser
    events:
        - http:
            path: api/customer/top/{userId}
            method: get
            cors: true
  getTopLanesForUser:
    handler:
      ./handlers/user.getTopLanesForUser
    events:
        - http:
            path: api/lane/top/{userId}
            method: get
            cors: true

# Customer
  updateCustomer:
    handler:
      ./handlers/customer.updateCustomer
    events:
        - http:
            path: api/customer/{customerId}
            method: put
            cors: true
  getCustomer:
    handler:
      ./handlers/customer.getCustomer
    events:
        - http:
            path: api/customer/{customerId}
            method: get
            cors: true
  getLanesForCustomer:
    handler:
      ./handlers/customer.getLanesForCustomer
    events:
        - http:
            path: api/lanes/customer/{customerId}
            method: get
            cors: true
  getLocationsForCustomer:
    handler:
      ./handlers/customer.getLocationsForCustomer
    events:
        - http:
            path: api/customer/{customerId}/locations
            method: get
            cors: true
  getTeammatesForCustomer:
    handler:
      ./handlers/customer.getTeammatesForCustomer
    events:
        - http:
            path: api/customer/{customerId}/teammates
            method: get
            cors: true
  addTeammateToCustomer:
    handler:
      ./handlers/customer.addTeammateToCustomer
    events:
        - http:
            path: api/customer/teammates
            method: post
            cors: true
  deleteTeammateFromCustomer:
    handler:
      ./handlers/customer.deleteTeammateFromCustomer
    events:
        - http:
            path: api/customer/teammates
            method: delete
            cors: true

# Lane
  getLanesByUser:
    handler:
      ./handlers/lane.getLanesByUser
    events:
        - http:
            path: api/lane/user/{id}
            method: get
            cors: true
  getLaneById:
    handler:
      ./handlers/lane.getLaneById
    events:
        - http:
            path: api/lane/{laneId}
            method: get
            cors: true
  updateLane:
    handler:
      ./handlers/lane.updateLane
    events:
        - http:
            path: api/lane/{laneId}
            method: put
            cors: true
  getMarketFeedback:
    handler:
      ./handlers/lane.getMarketFeedback
    events:
        - http:
            path: api/lane/{laneId}/feedback
            method: get
            cors: true
  addMarketFeedback:
    handler:
      ./handlers/lane.addMarketFeedback
    events:
        - http:
            path: api/lane/{laneId}/feedback
            method: post
            cors: true
  deleteMarketFeedback:
    handler:
      ./handlers/lane.deleteMarketFeedback
    events:
        - http:
            path: api/lane/{laneId}/feedback/{feedbackId}
            method: delete
            cors: true
  getTeammatesForLane:
    handler:
      ./handlers/lane.getTeammatesForLane
    events:
        - http:
            path: api/lane/{laneId}/teammates
            method: get
            cors: true
  addTeammatetoLane:
    handler:
      ./handlers/lane.addTeammateToLane
    events:
        - http:
            path: api/lane/teammates
            method: post
            cors: true
  deleteTeammateFromLane:
    handler:
      ./handlers/lane.deleteTeammateFromLane
    events:
        - http:
            path: api/lane/teammates
            method: delete
            cors: true
  getTopCarriers:
    handler:
      ./handlers/lane.getTopCarriers
    events:
        - http:
            path: api/lane/{laneId}/carriers
            method: get
            cors: true
  updateCarriers:
    handler:
      ./handlers/lane.addCarrier
    events:
        - http:
            path: api/lane/{laneId}/carriers
            method: post
            cors: true
        - http:
            path: api/lane/{laneId}/carriers
            method: put
            cors: true


  # Team
  addTeam:
    handler:
      ./handlers/team.addTeam
    events:
        - http:
            path: api/team
            method: post
            cors: true
  editTeam:
    handler:
      ./handlers/team.editTeam
    events:
        - http:
            path: api/team/{teamId}
            method: put
            cors: true
  deleteTeam:
    handler:
      ./handlers/team.deleteTeam
    events:
        - http:
            path: api/team/{teamId}
            method: delete
            cors: true
  getTeamById: 
    handler:
      ./handlers/team.getTeamById
    events:
        - http:
            path: api/team/{teamId}
            method: get
            cors: true
  getLanesForTeam:
    handler:
      ./handlers/team.getLanesForTeam
    events:
        - http:
            path: api/team/{teamId}/lanes
            method: get
            cors: true
  getTeammatesForTeam:
    handler:
      ./handlers/team.getTeammatesForTeam
    events:
        - http:
            path: api/team/{teamId}/teammates
            method: get
            cors: true
  removeTeammate:
    handler:
      ./handlers/team.removeTeammate
    events:
        - http:
            path: api/team/teammate/{userId}
            method: delete
            cors: true
  addTeammate:
    handler:
      ./handlers/team.addTeammate
    events:
        - http:
            path: api/team/teammate
            method: put
            cors: true

  # Location
  getLocationById:
    handler:
      ./handlers/location.getLocationById
    events:
        - http:
            path: api/location/{locationId}
            method: get
            cors: true
  editLocation:
    handler:
      ./handlers/location.editLocation
    events:
        - http:
            path: api/location
            method: put
            cors: true
  getLanesForLocation:
    handler:
      ./handlers/location.getLanesForLocation
    events:
        - http:
            path: api/location/{locationId}/lanes
            method: get
            cors: true
  getTeammatesForLocation:
    handler:
      ./handlers/location.getTeammatesForLocation
    events:
        - http:
            path: api/location/{locationId}/teammates
            method: get
            cors: true

  addTeammatetoLocation:
    handler:
      ./handlers/location.addTeammateToLocation
    events:
        - http:
            path: api/location/teammates
            method: post
            cors: true
  deleteTeammateFromLocation:
    handler:
      ./handlers/location.deleteTeammateFromLocation
    events:
        - http:
            path: api/location/teammates
            method: delete
            cors: true
  
  # Brokerage
  getBrokerage:
    handler:
      ./handlers/brokerage.getBrokerage
    events:
        - http:
            path: api/brokerage/{brokerageId}
            method: get
            cors: true
  getUsersForBrokerage:
    handler:
      ./handlers/brokerage.getUsersForBrokerage
    events:
        - http:
            path: api/brokerage/users
            method: get
            cors: true
  getLanesForBrokerage:
    handler:
      ./handlers/brokerage.getLanesForBrokerage
    events:
        - http:
            path: api/brokerage/{brokerageId}/lanes
            method: get
            cors: true
  editBrokerage:
    handler:
      ./handlers/brokerage.editBrokerage
    events:
        - http:
            path: api/brokerage
            method: put
            cors: true

  # Tag
  getTags:
    handler:
      ./handlers/tag.getTags
    events:
        - http:
            path: api/tag/{itemId}
            method: get
            cors: true
  addTag:
    handler:
      ./handlers/tag.addTag
    events:
        - http:
            path: api/tag/{itemId}
            method: post
            cors: true
  deleteTag:
    handler:
      ./handlers/tag.deleteTag
    events:
        - http:
            path: api/tag
            method: delete
            cors: true
  # Contact
  getContacts:
    handler:
      ./handlers/contact.getContacts
    events:
        - http:
            path: api/contact/{itemId}
            method: get
            cors: true
  addContact:
    handler:
      ./handlers/contact.addContact
    events:
        - http:
            path: api/contact/{itemId}
            method: post
            cors: true
  editContact:
    handler:
      ./handlers/contact.editContact
    events:
        - http:
            path: api/contact
            method: put
            cors: true
  deleteContact:
    handler:
      ./handlers/contact.deleteContact
    events:
        - http:
            path: api/contact
            method: delete
            cors: true

  # Onboarding
  createAccount:
    handler:
      ./handlers/onboarding.requestAccount
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/account
            method: post
            cors: true
  inviteUser:
    handler:
      ./handlers/onboarding.inviteUser
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    events:
        - http:
            path: api/onboarding/user
            method: post
            cors: true
  getBrokerageByUUID:
    handler:
      ./handlers/onboarding.getBrokerageByUUID
    events:
        - http:
            path: api/register/{uuid}
            method: get
            cors: true
  getTeamsForBrokerage:
    
    handler:
      ./handlers/onboarding.getTeamsForBrokerage
    events:
        - http:
            path: api/onboarding/teams
            method: get
            cors: true
  getCustomersForBrokerage:
    
    handler:
      ./handlers/onboarding.getCustomersForBrokerage
    events:
        - http:
            path: api/onboarding/customers
            method: get
            cors: true

  # Billing
  webhookHandler:
    handler:
      ./handlers/billing.webhookHandler
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/stripe-webhook
            method: post
            cors: true
  createStripeCustomer:
    handler:
      ./handlers/billing.createStripeCustomer
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/create-stripe-customer/{brokerageId}
            method: post
            cors: true
  createStripeSubscription:
    handler:
      ./handlers/billing.createStripeSubscription
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/create-stripe-subscription
            method: post
            cors: true
  getBillingDetails:
    handler:
      ./handlers/billing.getBillingDetails
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/billing-details
            method: get
            cors: true
  updateSubscription:
    handler:
      ./handlers/billing.updateSubscription
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/subscription
            method: post
            cors: true
  updateDefaultPaymentMethod:
    handler:
      ./handlers/billing.updateDefaultPaymentMethod
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/default-payment
            method: post
            cors: true
  createSetupIntent:
    handler:
      ./handlers/billing.createSetupIntent
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP_ID, env:SECURITY_GROUP_ID}                                                                                                                                                       
      subnetIds:                                                                                                                                                                       
        - subnet-0969f48a6ba21d4da # private
    timeout: 20
    events:
        - http:
            path: api/setup-intent
            method: post
            cors: true